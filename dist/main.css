/*! Aleph1-Layout
 * responsive layout framework
 *
 * Author: Essoudry Avraham
 */
/* Variables
 * ===============
 *
 * All variables and most of the configuration is defined on this page. */
/* Containers */
/* Breakpoints */
/* Padding */
/* Divider */
/* Mixins
  =============== */
/* Reset
  =============== */
/* Helpers
  =============== */
.a1-full-height {
  height: 100%;
}

.a1-self-center {
  align-self: center;
}

.a1-self-stretch {
  align-self: stretch;
}

.a1-padding {
  padding: 1rem;
}

.a1-padding-lr {
  padding-left: 1rem;
  padding-right: 1rem;
}

.a1-padding-tb {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.a1-margin {
  margin: 1rem;
}

.a1-margin-lr {
  margin-left: 1rem;
  margin-right: 1rem;
}

.a1-margin-tb {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

/* Layout
  =============== */
.a1-row,
.a1-column {
  display: flex;
  flex-wrap: nowrap;
  overflow: auto;
}

.a1-row.a1-end,
.a1-column.a1-end {
  justify-content: flex-end;
}

.a1-row.a1-no-scroll, .a1-row.a1-magic-scroll,
.a1-column.a1-no-scroll,
.a1-column.a1-magic-scroll {
  overflow: hidden !important;
}

.a1-row.a1-magic-scroll:hover,
.a1-column.a1-magic-scroll:hover {
  overflow: auto !important;
}

.a1-row.a1-overflow-visible,
.a1-column.a1-overflow-visible {
  overflow: visible !important;
}

.a1-row.a1-justify-items,
.a1-column.a1-justify-items {
  justify-content: space-between;
}

.a1-row.a1-same-size > *,
.a1-column.a1-same-size > * {
  flex: 1 1 0px;
  overflow: auto;
}

.a1-row > *,
.a1-column > * {
  flex: 0 0 auto;
}

.a1-row > .a1-long,
.a1-column > .a1-long {
  flex: 1 0 auto;
}

.a1-row > .a1-elastic,
.a1-column > .a1-elastic {
  flex: 0 1 auto;
  overflow: auto;
}

.a1-row > .a1-elastic.a1-long,
.a1-column > .a1-elastic.a1-long {
  flex: 1 1 auto;
}

.a1-row.a1-divided-items > :not(:first-child),
.a1-column.a1-divided-items > :not(:first-child) {
  overflow: visible;
  position: relative;
}

.a1-row.a1-divided-items > :not(:first-child):after {
  content: "";
  position: absolute;
  height: 100%;
  top: 0;
  border-right: 1px solid rgba(0, 0, 0, 0.1);
}

.a1-row:not(.a1-reverse) {
  flex-direction: row;
}

.a1-row:not(.a1-reverse).a1-spaced-items > :not(:first-child) {
  margin-left: 1rem;
}

.a1-row:not(.a1-reverse).a1-divided-items > :not(:first-child):after {
  left: -0.5rem;
}

.a1-row.a1-reverse {
  flex-direction: row-reverse;
}

.a1-row.a1-reverse.a1-spaced-items > :not(:first-child) {
  margin-right: 1rem;
}

.a1-row.a1-reverse.a1-divided-items > :not(:first-child):after {
  right: -0.5rem;
}

.a1-row.a1-center-items-h {
  justify-content: center;
}

.a1-row.a1-center-items-v {
  align-items: center;
}

.a1-column.a1-divided-items > :not(:first-child):after {
  content: "";
  position: absolute;
  width: 100%;
  left: 0;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
}

.a1-column:not(.a1-reverse) {
  flex-direction: column;
}

.a1-column:not(.a1-reverse).a1-spaced-items > :not(:first-child) {
  margin-top: 1rem;
}

.a1-column:not(.a1-reverse).a1-divided-items > :not(:first-child):after {
  top: -0.5rem;
}

.a1-column.a1-reverse {
  flex-direction: column-reverse;
}

.a1-column.a1-reverse.a1-spaced-items > :not(:first-child) {
  margin-bottom: 1rem;
}

.a1-column.a1-reverse.a1-divided-items > :not(:first-child):after {
  bottom: -0.5rem;
}

.a1-column.a1-center-items-h {
  align-items: center;
}

.a1-column.a1-center-items-v {
  justify-content: center;
}

.a1-rtl {
  direction: rtl;
}

.a1-rtl .a1-row:not(.a1-reverse).a1-spaced-items > :not(:first-child), .a1-rtl.a1-row:not(.a1-reverse).a1-spaced-items > :not(:first-child) {
  margin-left: 0;
  margin-right: 1rem;
}

.a1-rtl .a1-row:not(.a1-reverse).a1-divided-items > :not(:first-child):after, .a1-rtl.a1-row:not(.a1-reverse).a1-divided-items > :not(:first-child):after {
  left: unset;
  right: -0.5rem;
}

.a1-rtl .a1-row.a1-reverse.a1-spaced-items > :not(:first-child), .a1-rtl.a1-row.a1-reverse.a1-spaced-items > :not(:first-child) {
  margin-left: 1rem;
  margin-right: 0;
}

.a1-rtl .a1-row.a1-reverse.a1-divided-items > :not(:first-child):after, .a1-rtl.a1-row.a1-reverse.a1-divided-items > :not(:first-child):after {
  left: -0.5rem;
  right: unset;
}

/*# sourceMappingURL=data:application/json;base64, */